{
  "title": "AI Agents",
  "add": "New AI Agent",
  "edit": "Edit AI Agent",
  "delete": "Delete",
  "deleteTitle": "Delete AI Agent",
  "deleteConfirmation": "Are you sure you want to delete the AI Agent {{name}}?",
  "deleteWarning": "This action cannot be undone.",
  "lastUpdated": "Last updated",
  "noAgentsYet": "No AI Agents created yet",
  "noAgentsDescription": "AI Agents allow you to automate interactions with your customers using artificial intelligence. Create your first agent to get started.",
  "createFirstAgent": "Create first AI Agent",
  "prompt": "Agent",
  "updated": "Updated",
  "content": "Content",
  "defaultAgent": "Default Agent",
  "createFlow": "Create Flow based on this Agent",
  "syncFlow": "Sync Flow",
  "viewLinkedFlow": "View Linked Flow",
  "resetFlow": "Reset Flow",
  "resetFlowConfirm": "Are you sure you want to reset the flow? This action will delete the current flow and create a new one.",
  "resettingFlow": "Resetting flow...",
  "checkingFlow": "Checking flow...",
  "creatingFlow": "Creating flow...",
  "syncingFlow": "Syncing flow...",
  "flowLinkError": "Error linking with flow. Please try again.",
  "flowResetError": "Error resetting flow. Please try again.",
  "flowCreatedSuccess": "Flow created successfully!",
  "flowResetSuccess": "Flow reset successfully!",
  "hasLinkedFlow": "This AI agent has a linked flow",
  "flowOptions": "Flow Options",
  "timezone": "Timezone",
  "timezoneDescription": "Sets the timezone for date and time operations.",
  "selectTimezone": "Select a timezone",
  "noTimezoneFound": "No timezone found",
  "form": {
    "title": "Title",
    "titlePlaceholder": "Enter the prompt title",
    "description": "Description",
    "descriptionPlaceholder": "Describe the purpose of this prompt",
    "content": "Content",
    "contentPlaceholder": "No context defined. Click to add.",
    "tags": "Tags",
    "tagsPlaceholder": "Enter tags separated by commas",
    "integration": "Integration",
    "selectIntegration": "Select an integration",
    "model": "Model",
    "selectModel": "Select a model",
    "temperature": "Temperature",
    "temperatureDescription": "Controls the creativity of responses. Lower values make responses more deterministic, higher values make them more creative.",
    "isDefault": "Set as default AI Agent",
    "isDefaultDescription": "The default agent is used in some situations as Text Enhancer",
    "toolName": "Tool Name",
    "toolNamePlaceholder": "Ex: get_weather",
    "toolDescription": "Tool Description",
    "toolDescriptionPlaceholder": "Ex: Gets weather information for a specific location",
    "toolParameters": "Parameters",
    "toolParametersHelp": "Define tool parameters using JSON Schema format.",
    "addVariable": "+ Add Variable",
    "editVariable": "Edit Variable",
    "variableName": "Variable Name",
    "variableType": "Variable Type",
    "variableDescription": "Variable Description",
    "variableRequired": "Required",
    "variableEnum": "Possible Values (Enum)",
    "enumValuePlaceholder": "New value",
    "addEnum": "Add",
    "viewAsList": "View as List",
    "viewAsJson": "View as JSON",
    "noParameters": "No parameters defined",
    "toolsDescription": "Configure the actions that the model can execute. You can customize your own actions or use system-ready actions. Actions allow the model to perform specific tasks during the conversation. Only GPT-4, GPT-4o and GPT-3.5-Turbo models support actions.",
    "toolsInfo": "Information about actions",
    "toolsInfoDescription": "Actions allow the model to call specific functions. You can create custom actions or use system-ready actions.",
    "tools": "Actions",
    "addTool": "+ Add Action",
    "editTool": "Edit Action",
    "systemActions": "System Actions",
    "systemActionsDescription": "Ready-to-use actions available immediately",
    "addSystemAction": "+ Add System Action",
    "actionAlreadyAdded": "This action can only be added once",
    "customActions": "Custom Actions",
    "customActionsDescription": "Actions created and customized by you",
    "noSystemActions": "No system actions available",
    "noCustomActions": "No custom actions configured",
    "flow": {
      "title": "Flow",
      "description": "Configure triggers so this AI agent can be activated"
    },
    "examples": {
      "title": "Examples"
    },
    "tabs": {
      "general": "General Settings",
      "context": "Context",
      "tools": "Actions",
      "test": "Test"
    },
    "contextDescription": "Configure the context that will be sent to the model. This context defines the model's behavior and environment during the conversation.",
    "noTools": "No actions configured",
    "actions": {
      "title": "Tool Actions",
      "description": "Configure the actions that will be executed when this tool is called",
      "add": "+ Add Action",
      "addAction": "Add Action",
      "edit": "Edit Action",
      "noActions": "No actions defined",
      "name": "Action Name",
      "namePlaceholder": "Ex: Send to Flow",
      "type": "Action Type",
      "selectType": "Select the action type",
      "selectField": "Select the field",
      "funnel": "Funnel",
      "selectFunnel": "Select the funnel",
      "types": {
        "flow": "Flow",
        "function": "Function",
        "url": "URL",
        "update_customer": "Update Customer",
        "update_chat": "Update Chat",
        "start_flow": "Start Flow",
        "custom": "Custom",
        "check_schedule": "Schedule"
      },
      "manualInput": "Manual input",
      "useVariable": "Use variable",
      "descriptionPlaceholder": "Describe what this action does",
      "parameters": "Parameters",
      "parametersPlaceholder": "{\n  \"key\": \"value\"\n}",
      "customerName": "Customer Name",
      "status": "Chat Status",
      "team": "Chat Team",
      "chatFieldTitle": "Chat Title",
      "selectStatus": "Select status",
      "statusPending": "Pending",
      "statusInProgress": "In Progress",
      "statusClosed": "Closed",
      "selectTeam": "Select team",
      "flow": "Flow",
      "selectFlow": "Select flow",
      "stage": "Funnel stage",
      "selectStage": "Select stage",
      "chatTitlePlaceholder": "Chat Title",
      "filters": {
        "title": "Filters",
        "add": "+ Add Filter",
        "noFilters": "No filters defined",
        "variable": "Variable",
        "operator": "Operator",
        "value": "Value",
        "selectVariable": "Select variable",
        "selectField": "Select field",
        "manualInput": "Manual input",
        "selectFunnel": "Select funnel",
        "selectValue": "Select value",
        "enterValue": "Enter value",
        "description": "Only execute this action if the following conditions are met:",
        "operators": {
          "equals": "Equals",
          "notEquals": "Not equals",
          "contains": "Contains",
          "notContains": "Not contains",
          "startsWith": "Starts with",
          "endsWith": "Ends with",
          "greaterThan": "Greater than",
          "lessThan": "Less than",
          "greaterThanOrEqual": "Greater than or equal",
          "lessThanOrEqual": "Less than or equal",
          "exists": "Exists",
          "notExists": "Not exists",
          "not_exists": "Not exists"
        }
      },
      "config": {
        "title": "Configuration",
        "flow": {
          "title": "Flow Configuration",
          "selectFlow": "Select flow",
          "selectStage": "Select stage",
          "variables": "Variables"
        },
        "function": {
          "title": "Function Configuration",
          "selectFunction": "Select function",
          "parameters": "Function Parameters"
        },
        "url": {
          "title": "URL Configuration",
          "url": "URL",
          "method": "Method",
          "headers": "Headers",
          "body": "Request Body"
        },
        "schedule": {
          "selectSchedule": "Select a schedule",
          "noSchedule": "No schedule selected"
        },
        "changeFunnel": {
          "sourceStages": "Source Stages (Customer must be in one of these)",
          "targetStages": "Target Stages (AI can move to)",
          "editSourceDescriptions": "Edit source stage descriptions",
          "editTargetDescriptions": "Edit target stage descriptions",
          "sourceStagesDescription": "The funnel change will only be applied to customers in one of these stages",
          "targetStagesDescription": "Stages to which the AI can move customers (define clear descriptions)"
        },
        "customFields": {
          "selectedFields": "Selected fields"
        }
      },
      "validation": {
        "nameRequired": "Action name is required",
        "typeRequired": "Action type is required",
        "flowRequired": "Flow is required",
        "functionRequired": "Function is required",
        "urlRequired": "URL is required",
        "invalidUrl": "Invalid URL",
        "invalidJson": "Invalid JSON"
      },
      "buttons": {
        "save": "Save",
        "cancel": "Cancel",
        "addFilter": "Add Filter",
        "removeFilter": "Remove Filter"
      },
      "customerNamePlaceholder": "Customer name",
      "selectVariable": "Select variable",
      "schedule": "Schedule",
      "selectSchedule": "Select a schedule",
      "scheduleOperation": "Operation",
      "scheduleOperationTypes": {
        "checkAvailability": "Check Availability",
        "createAppointment": "Create Appointment",
        "checkAppointment": "Check Appointment",
        "deleteAppointment": "Delete Appointment"
      },
      "selectOperation": "Select operation",
      "scheduleDay": "Day",
      "scheduleService": "Service",
      "serviceMapping": "Service Mapping",
      "selectService": "Select service",
      "directFunnel": "Direct Funnel",
      "mappedFunnel": "Mapped Funnel",
      "stageMapping": "Stage Mapping",
      "directStatus": "Direct Status",
      "mappedStatus": "Mapped Status",
      "statusMapping": "Status Mapping",
      "directTeam": "Direct Team",
      "mappedTeam": "Mapped Team",
      "teamMapping": "Team Mapping",
      "directTitle": "Direct Title",
      "mappedTitle": "Mapped Title",
      "titleMapping": "Title Mapping",
      "directName": "Direct Name",
      "mappedName": "Mapped Name",
      "nameMapping": "Name Mapping",
      "directFlow": "Direct Flow",
      "mappedFlow": "Mapped Flow",
      "flowMapping": "Flow Mapping",
      "flowNamePlaceholder": "Enter flow name",
      "scheduleTime": "Time",
      "scheduleNotes": "Notes/Observations",
      "notesPlaceholder": "Enter notes or observations",
      "directOperation": "Direct Operation",
      "mappedOperation": "Mapped Operation",
      "operationMapping": "Operation Mapping",
      "appointmentId": "Appointment ID in YYYY-MM-DD-HH:MM format",
      "aiSettings": "AI Settings"
    },
    "aiSettings": "AI Settings",
    "systemActionTypes": {
      "schedule": {
        "name": "Schedule Meeting",
        "nameInsert": "Schedule Meeting",
        "description": "Schedule a meeting when... (example: customer says 'I want to schedule a consultation')"
      },
      "updateCustomerCustomData": {
        "name": "Update Customer Custom Data",
        "nameInsert": "Update {{fields}} of the customer",
        "description": "Update {{fields}} of the customer when they send these data"
      },
      "transferToTeam": {
        "name": "Transfer to Team",
        "nameInsert": "Transfer to Team",
        "description": "Transfer to some team when... (example: customer says 'I want to speak with sales')"
      },
      "endChat": {
        "name": "End Chat",
        "nameInsert": "End Chat",
        "description": "End the current chat when... (example: customer says 'end' or 'goodbye')"
      },
      "changeCustomerName": {
        "name": "Change Customer Name",
        "nameInsert": "Change Customer Name",
        "description": "Change the current customer name only when the customer says 'my name is John'"
      },
      "changeFunnel": {
        "name": "Change Funnel",
        "nameInsert": "Change Funnel",
        "description": "Change the current funnel when identifying behavior according to each funnel stage description",
        "sourceStages": "Source Stages (Customer must be in one of these)",
        "targetStages": "Target Stages (AI can move to)",
        "editSourceDescriptions": "Edit source stage descriptions",
        "editTargetDescriptions": "Edit target stage descriptions",
        "sourceStagesDescription": "The funnel change will only be applied to customers in one of these stages",
        "targetStagesDescription": "Stages to which the AI can move customers (define clear descriptions)"
      },
      "assignTeam": {
        "name": "Assign Team",
        "nameInsert": "Assign Team",
        "description": "Assign the team to the chat when identifying behavior according to each team description. (example: customer says 'I want to speak with sales')"
      },
      "dateReturn": {
        "name": "Return Date",
        "nameInsert": "Return Date",
        "description": "Return the current date when... (example: customer says 'return tomorrow or day x')"
      },
      "saveQuestionsNotInContext": {
        "name": "Save Questions Not in Context",
        "nameInsert": "Save Questions Not in Context",
        "description": "Save questions that are not in context when... (example: customer says 'I want to know the date')"
      },
      "createTask": {
        "name": "Create Task",
        "nameInsert": "Create Task",
        "description": "Create a task when... (example: customer says 'create a task for me')"
      },
      "unknownResponse": {
        "name": "When there is no answer in the context",
        "nameInsert": "When there is no answer in the context",
        "description": "Define how to handle questions that are not in the context",
        "options": {
          "pauseAgent": "Pause agent immediately",
          "saveQuestion": "Save question for review",
          "tryToAnswer": "Try to answer anyway"
        }
      }
    },
    "editSystemAction": "Edit System Action",
    "actionName": "Action Name",
    "actionDescription": "Action Description",
    "toolConfig": "Configuration",
    "images": {
      "title": "Media",
      "description": "Add images, videos, audio and documents to enrich your prompt",
      "addButton": "Add Media",
      "uploadTitle": "Add Media",
      "editTitle": "Edit Description",
      "file": "File",
      "imageDescription": "Description",
      "imageDescriptionPlaceholder": "Describe the content of this file...",
      "cancel": "Cancel",
      "addToList": "Add to List",
      "save": "Save",
      "uploading": "Uploading...",
      "uploadAll": "Upload All",
      "pendingUploads": "Pending Uploads",
      "noDescription": "No description",
      "errors": {
        "fileSize": "The file is too large. Maximum size allowed is 10MB.",
        "fileType": "Unsupported file type. Use only images, videos, audio, PDFs or documents.",
        "uploadFailed": "Failed to upload file. Please try again.",
        "deleteFailed": "Failed to delete file. Please try again."
      },
      "confirmDelete": "Confirm Deletion",
      "confirmDeleteMessage": "Are you sure you want to delete this file? This action cannot be undone.",
      "confirm": "Confirm",
      "deleting": "Deleting..."
    },
    "errors": {
      "imageTooLarge": "Image is too large. Maximum size: 5MB",
      "uploadFailed": "Failed to upload image",
      "deleteFailed": "Failed to delete image"
    },
    "media": {
      "title": "Media",
      "description": "Add images, videos, audio and documents to enrich the prompt context",
      "addButton": "Add Media",
      "uploading": "Uploading...",
      "uploaded": "Uploaded",
      "error": "Error uploading",
      "deleteButton": "Delete",
      "viewButton": "View",
      "modal": {
        "title": "Add Media",
        "description": "Drag and drop files here or click to select",
        "fileTypes": {
          "image": "Images (PNG, JPG, GIF)",
          "video": "Videos (MP4, MOV, AVI)",
          "audio": "Audio (MP3, WAV, OGG)",
          "document": "Documents (DOC, DOCX, TXT)",
          "pdf": "PDFs"
        },
        "maxSize": "Maximum size: 10MB",
        "mediaDescription": "Media Description",
        "mediaDescriptionPlaceholder": "Enter a description for the media"
      },
      "errors": {
        "fileTooLarge": "File is too large. Maximum size: 10MB",
        "invalidType": "Unsupported file type",
        "uploadFailed": "Error uploading file",
        "deleteFailed": "Error deleting file"
      }
    },
    "filesDescription": "Add media that the agent can send during the conversation. You can include images, videos, audio and documents that will be available to the agent."
  },
  "test": {
    "title": "Test Prompt",
    "description": "Test your prompt's behavior in real-time.",
    "placeholder": "Enter a message to test the prompt",
    "empty": "Send a message to test the prompt",
    "clearChat": "Clear chat",
    "send": "Send",
    "testing": "Testing...",
    "success": "",
    "error": "Error testing prompt",
    "errorBackend": "Error processing prompt on server",
    "noIntegration": "No OpenAI integration available",
    "selectIntegration": "Select integration to test the prompt",
    "model": "Model",
    "temperature": "Temperature",
    "loadingModels": "Loading models...",
    "tokenUsage": "Token Usage",
    "promptTokens": "Prompt",
    "completionTokens": "Response",
    "totalTokens": "Total",
    "noModelsAvailable": "No models available",
    "loadingIntegrations": "Loading integrations...",
    "noIntegrationsAvailable": "No integrations available"
  },
  "testPlaceholder": "Enter a message to test the AI Agent",
  "testEmpty": "Send a message to test the AI Agent",
  "clearChat": "Clear chat",
  "send": "Send",
  "testing": "Testing...",
  "testSuccess": "AI Agent tested successfully!",
  "testError": "Error testing AI Agent",
  "testErrorBackend": "Error processing AI Agent on server",
  "testNoIntegration": "No OpenAI integration available",
  "selectIntegration": "Select integration to test AI Agent",
  "model": "Model",
  "temperature": "Temperature",
  "loadingModels": "Loading models...",
  "tokenUsage": "Token Usage",
  "promptTokens": "Prompt",
  "completionTokens": "Response",
  "totalTokens": "Total",
  "noModelsAvailable": "No models available",
  "loadingIntegrations": "Loading integrations...",
  "noIntegrationsAvailable": "No integrations available",
  "editor": {
    "editMode": "Code",
    "liveMode": "Split View",
    "previewMode": "Preview"
  },
  "togglePreview": "Toggle preview",
  "toggleFullscreen": "Toggle fullscreen",
  "extraContexts": "Extra Contexts",
  "addExtraContext": "Add Extra Context",
  "editExtraContext": "Edit Extra Context",
  "noExtraContexts": "No extra contexts added",
  "selectTemplate": "Select a template",
  "templates": {
    "whatsappList": {
      "title": "WhatsApp List",
      "description": "Interactive WhatsApp list with sections and options",
      "defaultTitle": "WhatsApp List",
      "defaultDescription": "Interactive WhatsApp list with sections and selectable options",
      "formatHeading": "Format for list when requesting company service list, or when you can structure the service list into sections and options",
      "titleExample": "Ex.: Company service list (Required)",
      "descriptionExample": "Ex.: Description of the company service list (Required)",
      "buttonText": "Ex.: Open list",
      "sectionTitle": "Ex.: Section 1",
      "sectionTitle2": "Ex.: Section 2",
      "optionTitle": "Ex.: Option 1",
      "optionTitle2": "Ex.: Option 2",
      "optionDescription": "Ex.: Description of option 1",
      "optionDescription2": "Ex.: Description of option 2"
    },
    "blank": {
      "title": "Blank",
      "description": "Create a custom context from scratch",
      "defaultTitle": "Custom Context",
      "defaultDescription": "Manually created custom context"
    }
  },
  "description": "Description",
  "generatePrompt": {
    "title": "Generate Virtual Assistant",
    "button": "Generate Virtual Assistant",
    "businessName": "Company Name",
    "businessNamePlaceholder": "Ex: ABC Company",
    "businessDescription": "Company/Services Description",
    "businessDescriptionPlaceholder": "Describe the products/services offered and how the assistant should explain them",
    "industry": "Industry",
    "industryPlaceholder": "Ex: E-commerce, Healthcare, Education, Technical Support",
    "targetAudience": "Target Audience",
    "targetAudiencePlaceholder": "Ex: Potential customers, Current customers, Patients, Technology users",
    "tone": "Communication Tone",
    "specificNeeds": "Additional Information",
    "specificNeedsPlaceholder": "Add useful information like: social media, address, business hours, service policies, contact channels, etc.",
    "specificNeedsHelp": "Important information that the virtual assistant should know to properly assist customers",
    "attendantName": "Virtual Assistant Name",
    "attendantNamePlaceholder": "Ex: Anna, Charles, etc. (leave blank to suggest a name)",
    "attendantNameHelp": "The name the virtual assistant will use when interacting with customers",
    "attendantDescription": "Configure the details of your virtual assistant. The system will generate a specialized prompt to simulate a human assistant.",
    "generating": "Generating Assistant...",
    "generate": "Generate Virtual Assistant",
    "success": "Virtual assistant generated successfully!",
    "generalError": "Error generating the virtual assistant. Please try again.",
    "autoUpdate": "Automatically update prompt"
  },
  "tones": {
    "professional": "Professional",
    "friendly": "Friendly",
    "casual": "Casual",
    "formal": "Formal",
    "enthusiastic": "Enthusiastic"
  },
  "unknowns": {
    "title": "Questions Without Context",
    "loadError": "Error loading unknown questions",
    "updateError": "Error updating question",
    "suggestResponseError": "Error suggesting response",
    "empty": "No pending questions",
    "emptyDescription": "There are no pending questions without context for this prompt",
    "priority": {
      "high": "High",
      "medium": "Medium",
      "low": "Low"
    },
    "viewChat": "View conversation",
    "viewChatButton": "View Conversation",
    "count": "Question {{current}} of {{total}}",
    "question": "Question",
    "existingContent": "Current Content",
    "notes": "Notes",
    "response": "Response to add to context",
    "responsePlaceholder": "Write the response that will be added to the context...",
    "suggestResponse": "Suggest response with AI",
    "suggesting": "Suggesting...",
    "previous": "Previous",
    "next": "Next",
    "reject": "Reject",
    "addToContext": "Add to Context"
  }
}